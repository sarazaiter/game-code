#include <GL/glut.h>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS
#include <windows.h>
#include <GL/glut.h>
#include <stdlib.h>
#include <stdio.h>
#include <iostream>
#include <string>


float posX = 0.0f, posY = 0.0f, posZ = -5.0f;
float move_unit = 0.2f;

float sx = 1.0f, sy = 1.0f, sz = 1.0f;
float scale_unit = 0.5f;

float rx = 0, ry = 0, rz = 0;
float angle = 0.0;

void myinit()
{
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Coin Game");

}

//Moving the Car

void keyboardArrowsTrans(int key, int x, int y) {
	switch (key) {
	case GLUT_KEY_RIGHT:
		posX += move_unit;
		break;
	case GLUT_KEY_LEFT:
		posX -= move_unit;
		break;
	case GLUT_KEY_UP:
		posY += move_unit;
		break;
	case GLUT_KEY_DOWN:
		posY -= move_unit;
		break;
	default:
		break;
	}
	glutPostRedisplay();
}

void drawCar() {

	//Car Shape

	glBegin(GL_POLYGON);
	glColor3f(1, 0, 0);
	glVertex2f(-7.0, 0.0);
	glVertex2f(7.0, 0.0);
	glVertex2f(7.0, 2.0);
	glVertex2f(2.0, 5.0);
	glVertex2f(-7.0, 5.0);
	glEnd();

	//Car Wheels

	float x1, y1, x2, y2;
	float angle;
	double radius = 1.5;
	x1 = 2.5, y1 = 0;

	glColor3d(0, 0, 0);
	glBegin(GL_TRIANGLE_FAN);

	for (angle = 1.0f; angle < 361.0f; angle += 0.2)
	{
		x2 = x1 + sin(angle) * radius;
		y2 = y1 + cos(angle) * radius;
		glVertex2f(x2, y2);
	}
	glEnd();

	x1 = -2.5, y1 = 0;
	glColor3d(0, 0, 0);
	glBegin(GL_TRIANGLE_FAN);

	for (angle = 1.0f; angle < 361.0f; angle += 0.2)
	{
		x2 = x1 + sin(angle) * radius;
		y2 = y1 + cos(angle) * radius;
		glVertex2f(x2, y2);
	}
	glEnd();
}

//Coins Function

void drawCoins() {

	float x1, y1, x2, y2;
	float angle;
	double radius = 1.5;
	x1 = 11.5, y1 = 0;

	glColor3d(1, 1, 0);
	glBegin(GL_TRIANGLE_FAN);

	for (angle = 1.0f; angle < 361.0f; angle += 0.2)
	{
		x2 = x1 + sin(angle) * radius;
		y2 = y1 + cos(angle) * radius;
		glVertex2f(x2, y2);
	}
	glEnd();

	x1 = 17.5, y1 = 0;
	glColor3d(1, 1, 0);
	glBegin(GL_TRIANGLE_FAN);

	for (angle = 1.0f; angle < 361.0f; angle += 0.2)
	{
		x2 = x1 + sin(angle) * radius;
		y2 = y1 + cos(angle) * radius;
		glVertex2f(x2, y2);
	}
	glEnd();
}

//Road Function

void drawRoad()
{
	glBegin(GL_QUADS);

	glColor3f(0, 1, 0);
	glVertex2f(-7, -6);
	glVertex2f(50, -20);
	glVertex2f(-1, -2);
	glVertex2f(-7, -2);

	glEnd();
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glClearColor(0.25, 0.46, 0.70, 0);
	glLoadIdentity();
	glTranslated(posX, posY, posZ);
	drawCar();
	drawCoins();
	drawRoad();
	glutSpecialFunc(keyboardArrowsTrans);

	glFlush();
}

void reshape(int width, int height)
{
	glMatrixMode(GL_PROJECTION);
	glViewport(0, 0, width, height);
	float aspect = ((double)width) / height;
	glLoadIdentity();
	gluPerspective(160.0, aspect, 1.0, 100.0);
	//glOrtho(-15.0, 15.0, -15.0, 15.0, -15.0, 15.0);
	glMatrixMode(GL_MODELVIEW);
}

void main(int argc, char** argv)
{
	glutInit(&argc, argv);
	myinit();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMainLoop();
}
